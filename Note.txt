async sendMessage(chatId: number, content: string): Promise<Message> {
  // Find the chat session by chatId
  const chat = await this.directMessageRepository.findOne({
    where: { id: chatId },
    relations: ['sender', 'receiver'],
  });

  if (!chat) {
    throw new NotFoundException(`Chat with ID ${chatId} not found`);
  }

  // Create and save the new message
  const newMessage = new Message();
  newMessage.chatid = chat;
  newMessage.SenderUserID = chat.sender; // Assuming the sender is always the chat initiator
  newMessage.ReceiverUserID = chat.receiver; // The other user in the chat
  newMessage.Content = content;
  newMessage.Timestamp = new Date().toISOString();

  console.log(`Attempting to save message in chat ${chatId}`);
  const savedMessage = await this.messageRepository.save(newMessage);
  console.log(`Message saved with ID: ${savedMessage.id}`);
  
  return savedMessage;
}