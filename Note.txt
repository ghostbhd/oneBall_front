
+ TO DO :

- do the DM
- make the chaneels dto and user it
- make the block entity and implimente it, This way, they will see no more
    messages from the account they blocked.

- channels can be private or public , with password or with not : Done
- make sure that  The channel owner is a channel administrator. They can set other users as
    administrators. :DONE (still need some tests F)

-A user who is an administrator of a channel can kick, ban or mute (for a
    limited time) other users, but not the channel owners.

-still need to ajust the mute time function 


+ Group things :

- The user should be able to invite other users to play a Pong game through the chat
interface.
-  The user should be able to access other players profiles through the chat interface.


NOTES:c

-need to fix why i cant get the chatids (see the chat)
- check the last method in the service 
- needto add the status codes
add func what are the channels the user are in them


  -----------------------------------------
  // const Messages = () => {
//       return (
//       <div className={`flex ${style.boxWidth} ${style.rounded} ${style.blueBlur} overflow-hidden`}>
//         <div className={`flex-none ${style.chatListWidth}`}> {/* Control the width in your style.js */}
//           <ChatList />
//         </div>
//         <div className={`flex-grow ${style.chatWindowFlex}`}>
//           <ChatWindow />
//         </div>
//       </div>
//     );
//   };



// const ChatWindow = () => {
//   return (
//     <div className={`w-9/12 ${style.contentW} bg-opacity-60 p-4 flex flex-col`}>
//       {/* Chat header */}
//       <div className="flex items-center mb-4">
//         {/* Placeholder for selected user's avatar and name */}
//         <img className="w-12 h-12 rounded-full mr-4" src="path_to_avatar" alt="User Name" />
//         <h2 className="text-white">User Name</h2>
//       </div>

//       {/* Message display */}
//       <div className="flex-1 overflow-y-auto mb-4">
//         {mockMessages.map((message) => (
//           <div key={message.id} className="mb-4">
//             <p className="text-white">{message.text}</p>
//             <span className="text-gray-400">{message.time}</span>
//           </div>
//         ))}
//       </div>

//       {/* Message input */}
//       <div className="mt-auto">
//         <input className="w-full p-2 rounded" placeholder="Type a message..." />
//       </div>
//     </div>
//   );
// };

// export default ChatWindow;


// const ChatList = ({ chats }) => {
//   const [activeChat, setActiveChat] = useState(null);

//   return (
//     <div className={style.chatList}>
//       {chats.map((chat) => (
//         <div
//           key={chat.id}
//           className={`${style.chatListItem} ${activeChat === chat.id ? style.chatListItemActive : ''}`}
//           onClick={() => setActiveChat(chat.id)}
//         >
//           {chat.name}
//         </div>
//       ))}
//     </div>
//   );
// };

